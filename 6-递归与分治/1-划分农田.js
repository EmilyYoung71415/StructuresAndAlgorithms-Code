/***
 * 假设你有一块农田,求如何将这块地均匀的分成方块,
 * 且分出的方块尽可能大
 * 即一个矩阵，将矩阵分成一个个小区域，且保证每个小区域都是一样大小的正方形
 * 
 * 假设矩阵长x米宽y米至少可以确定，可以分成一个个x*y个1米边长的方块 
 * 但是1米太小了，问题是如果找到最大的?
 * 
 * exp:
 *      x=1680 y=640
 * output:
 *      80
 *  
 */

 /****
  * 思路:
  * 基线条件:矩阵的一条边是另一条边的整数倍
  * 递归: 缩小问题规模
  *     首先找出这块地的最大方块,即以短边为边长的方块
  *     矩形切割掉此方块后，剩下新的矩阵，新矩阵又以短边为边长切割方块
  *     直到剩下的矩阵长宽之间是整数倍关系
  */

console.log(getMaxSquare(1680,640))

// x是长 y是宽
function getMaxSquare(x,y){
    // 整数倍关系
    if(x%y==0){
        return y;// 一定会有的，最坏也就是1
    }
    let newY = x - (x/y>>0)*y,
        newX = y;
    return getMaxSquare(newX,newY);
}